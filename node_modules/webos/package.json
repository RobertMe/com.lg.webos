{
  "name": "webos",
  "version": "1.0.3",
  "description": "webOS client for LG TVs",
  "main": "index.js",
  "directories": {
    "example": "examples"
  },
  "dependencies": {
    "ws": "^1.0.1"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://WeeJeWel@github.com/WeeJeWel/node-webos.git"
  },
  "author": {
    "name": "Emile Nijssen"
  },
  "license": "Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
  "bugs": {
    "url": "https://github.com/WeeJeWel/node-webos/issues"
  },
  "homepage": "https://github.com/WeeJeWel/node-webos#readme",
  "readme": "# node-webos\nwebOS client for LG TVs\n\nLargely inspired by [https://github.com/msloth/lgtv.js](https://github.com/msloth/lgtv.js). Thanks for all the hard work!\n\n## Examples\n### Scanning for a TV\n\n```javascript\nvar Scanner = require('webos').Scanner;\nvar scanner = new Scanner();\n\nscanner.startScanning();\nscanner.on('device', function(device){\n\tconsole.log('device', device)\n\t\n\tscanner.stopScanning();\n\t\n})\n```\n\n### Sending commands to a TV\n\n```javascript\nvar Remote = require('webos').Remote;\nvar remote = new Remote();\n\n// If you don't provide `key`, the TV will show a pairing dialog. When pressed OK, the callback's 2nd parameter will be your new key.\nremote.connect({\n\taddress\t: process.argv[2] || '192.168.0.109',\n\tkey\t\t: process.argv[3] || '4d5b7754bb3cc6475ffb3ca09a14dee9'\n}, function( err, key ){\n\tif( err ) return console.error('Error', err);\n\t\n\tconsole.log('------- showing float --------');\n\tremote.showFloat( \"Test\", function( err, result ){\n\t\tif( err ) return console.error('Error', err);\n\t\t\n\t\tconsole.log(\"You should've seen 'Test'\")\t\n\t\t\n\t\tconsole.log('------- getting channels --------');\n\t\tremote.getChannels(function( err, channels ){\n\t\t\tif( err ) return console.error('Error', err);\t\n\t\t\n\t\t\tconsole.log('got %s channels', channels.length)\n\t\t\tconsole.log('channel #1:', channels[0]);\n\t\t\t\n\t\t\tconsole.log('------- disconnecting --------');\n\t\t\tremote.disconnect(function( err, disconnected ){\n\t\t\t\tif( err ) return console.error('Error', err);\n\t\t\t\tconsole.log('Disconnected');\t\t\t\n\t\t\t});\n\t\t})\n\t})\n})\n```\n\n## Todo\n* Input methods (keyboard + pointer)\n* Open a YouTube video instantly\n\n# License\n[Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International](http://creativecommons.org/licenses/by-nc-sa/4.0/)\n",
  "readmeFilename": "README.md",
  "gitHead": "fabf69226e7ceb72b5ef547bec0675ffb4b14943",
  "_id": "webos@1.0.3",
  "_shasum": "18597a532b179e2140862dbb96b238eb4cbd82b7",
  "_from": "webos@>=1.0.1 <2.0.0"
}
